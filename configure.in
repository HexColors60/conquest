dnl Process this file with autoconf to produce a configure script.
dnl Jon Trulson 9/21/96 - with some borrowed code from various sources...;-)
dnl
dnl $Id$
dnl

AC_INIT(c_defs.h)
AC_CONFIG_HEADER(config.h)

AC_PREFIX_DEFAULT(/opt)

dnl checks the system
dnl AC_CANONICAL_SYSTEM
dnl Checks for programs.
dnl get the system type and set accordingly.  first init some defaults.

AC_MSG_CHECKING(system type)

uname=`uname -s`
urev=`uname -r`

case "$uname" in
  Linux*)
	AC_DEFINE(LINUX)    
	CFLAGS="$CFLAGS -D__NO_MATH_INLINES -O2 -fPIC -fno-builtin"

	FILEPRIV="@-echo filepriv"
	AC_SUBST(FILEPRIV)

	CONQLB="libconquest.so"
	AC_SUBST(CONQLB)

	LBFLAGS="$LBFLAGS \$(CFLAGS) --shared -o \$(CONQLB)"
	AC_SUBST(LBFLAGS)

	LBBUILD="\$(CC)"
	AC_SUBST(LBBUILD)

	RANLIB="echo"
	AC_SUBST(RANLIB)

	AC_MSG_RESULT(Linux)
	;;
  FreeBSD*)
	AC_DEFINE(FREEBSD)
	CFLAGS="$CFLAGS -D__NO_MATH_INLINES -O2 -fPIC -fno-builtin"

	FILEPRIV="@-echo filepriv"
	AC_SUBST(FILEPRIV)

	CONQLB="libconquest.a"
	AC_SUBST(CONQLB)

	LBFLAGS="-ruv \$(CONQLB)"
	AC_SUBST(LBFLAGS)

	LBBUILD="ar"
	AC_SUBST(LBBUILD)

	RANLIB="ranlib"
	AC_SUBST(RANLIB)

	LIBS="$LIBS -lcompat"

	AC_MSG_RESULT(FreeBSD)
	;;
  SunOS*)
	AC_DEFINE(SOLARIS)

	CC="gcc"
	CFLAGS="$CFLAGS -O2 -fPIC -fno-builtin"

	FILEPRIV="@-echo filepriv"
	AC_SUBST(FILEPRIV)

	CONQLB="libconquest.so"
	AC_SUBST(CONQLB)

	LBFLAGS="$LBFLAGS \$(CFLAGS) --shared -o \$(CONQLB)"
	AC_SUBST(LBFLAGS)

	LBBUILD="\$(CC)"
	AC_SUBST(LBBUILD)

	RANLIB="echo"
	AC_SUBST(RANLIB)

	AC_MSG_RESULT(Solaris)
	;;
  UNIX_SV*|UnixWare)
	AC_DEFINE(UNIXWARE)
	CFLAGS="$CFLAGS -O -KPIC -Xa"

	FILEPRIV="/sbin/filepriv"
	AC_SUBST(FILEPRIV)

	CONQLB="libconquest.so"
	AC_SUBST(CONQLB)

	LBFLAGS="$LBFLAGS -G \$(CFLAGS) -o \$(CONQLB)"
	AC_SUBST(LBFLAGS)

	CC="cc"

	LBBUILD="\$(CC)"
	AC_SUBST(LBBUILD)

	RANLIB="echo"
	AC_SUBST(RANLIB)

	AC_MSG_RESULT(UnixWare)
	;;
  *)	
	# assume Unixware
	AC_DEFINE(UNIXWARE)     # this enables some things too
	CFLAGS="$CFLAGS -O -KPIC -Xa"

	FILEPRIV="/sbin/filepriv"
	AC_SUBST(FILEPRIV)

	CONQLB="libconquest.so"
	AC_SUBST(CONQLB)

	LBFLAGS="$LBFLAGS -G \$(CFLAGS) -o \$(CONQLB)"
	AC_SUBST(LBFLAGS)

	CC="cc"

	LBBUILD="\$(CC)"
	AC_SUBST(LBBUILD)

	RANLIB="echo"
	AC_SUBST(RANLIB)

	AC_MSG_RESULT(UNKNOWN - using UnixWare)
	;;
esac

AC_PROG_CC
AC_PROG_MAKE_SET

dnl check for a yacc parser and libs - borrowed from autoconf. (AC_PROG_YACC)
dnl we want yacc to be checked first rather than bison

AC_CHECK_PROG(YACC, yacc, yacc, bison -y)
if test -z "$YACCLIB"
then
    AC_CHECK_LIB(y, main, YACCLIB="-ly")
fi
AC_SUBST(YACCLIB)

dnl check for a lexer and libs - borrowed from autoconf. (AC_PROG_LEX)
dnl we want lex to be checked first rather than flex

AC_CHECK_PROG(LEX, lex, lex, flex)
if test -z "$LEXLIB"
then
  AC_CHECK_LIB(l, yywrap, LEXLIB="-ll", 
    AC_CHECK_LIB(fl, yywrap, LEXLIB="-lfl"))
fi

AC_SUBST(LEXLIB)

dnl Checks for libraries.
dnl Replace `main' with a function in -lm:

AC_CHECK_LIB(m, main)

# check for ncurses
olibs="$LIBS"
AC_CHECK_LIB(ncurses, initscr, LIBS="-lncurses $olibs",
  AC_CHECK_LIB(curses, initscr, LIBS="-lcurses $olibs",
    AC_MSG_WARN(I cannot find initscr.  you might need to help me)))

# check for libcrypt
olibs="$LIBS"
AC_CHECK_LIB(crypt, crypt, LIBS="$olibs -lcrypt")

# check for libgen
olibs="$LIBS"
AC_CHECK_LIB(gen, crypt, LIBS="$olibs -lgen")

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h sys/ioctl.h sys/times.h termio.h unistd.h)
AC_CHECK_HEADERS(ncurses.h term.h sys/time.h sys/select.h stropts.h poll.h)
AC_CHECK_HEADERS(curses.h time.h string.h strings.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_FUNC_MMAP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(select strstr fileno)
AC_CHECK_FUNCS(getmsg poll setitimer)

dnl check for sys_errlist decl

AC_MSG_CHECKING(for sys_errlist declaration)
AC_TRY_RUN([
#include <sys/types.h>
#include <stdio.h>

#include <errno.h>
main()
{
  char *s = sys_errlist[0];
  exit(0);
}
],
  AC_MSG_RESULT(yes)
  AC_DEFINE(SYS_ERRLIST_DECLARED),
  AC_MSG_RESULT(no), :)

AC_OUTPUT(Makefile)



